ALTER TABLE SYS10_TRANSLATIONS ADD COMPANY_CODE_SYS01 VARCHAR(20);
ALTER TABLE HIE02_HIERARCHIES ADD COMPANY_CODE_SYS01 VARCHAR(20);
ALTER TABLE SYS03_USERS ADD DEF_COMPANY_CODE_SYS01 VARCHAR(20);

INSERT INTO SYS13_WINDOWS(PROGRESSIVE,FUNCTION_CODE_SYS06,TABLE_NAME)
SELECT PROGRESSIVE_HIE01,'ITM01','ITM01_ITEMS' FROM ITM02_ITEM_TYPES,HIE02_HIERARCHIES
WHERE ITM02_ITEM_TYPES.PROGRESSIVE_HIE02=HIE02_HIERARCHIES.PROGRESSIVE AND
NOT EXISTS(SELECT * FROM SYS13_WINDOWS WHERE PROGRESSIVE=PROGRESSIVE_HIE01);

DELETE FROM SYS13_WINDOWS WHERE PROGRESSIVE=262;

CREATE TABLE SYS23_ETL_PROCESSES (
  PROGRESSIVE NUMERIC(12) NOT NULL,
  DESCRIPTION VARCHAR(1000) NOT NULL,
  CLASS_NAME VARCHAR(1000) NOT NULL,
  COMPANY_CODE_SYS01 VARCHAR(20) NULL,
  FILE_FORMAT VARCHAR(20) NOT NULL,
  FILENAME VARCHAR(1000) NULL,
  LEVELS_SEP CHAR(1) NULL,
  SUB_TYPE_VALUE VARCHAR(20) NULL,
  SUB_TYPE_VALUE2 VARCHAR(20) NULL,
  PROGRESSIVE_HIE02 NUMERIC(12) NULL,
  SCHEDULING_TYPE CHAR(1) NULL,
  START_TIME DATETIME NULL,
  PRIMARY KEY(PROGRESSIVE),
  INDEX SYS23_ETL_PROCESSES_FKIndex1(PROGRESSIVE_HIE02),
  FOREIGN KEY(PROGRESSIVE_HIE02)
    REFERENCES HIE02_HIERARCHIES(PROGRESSIVE)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE TABLE SYS24_ETL_PROCESS_FIELDS (
  PROGRESSIVE_SYS23 NUMERIC(12) NOT NULL,
  FIELD_NAME VARCHAR(255) NOT NULL,
  LANGUAGE_CODE VARCHAR(20) NOT NULL,
  PROGRESSIVE NUMERIC(12) NOT NULL,
  DATE_FORMAT VARCHAR(20) NULL,
  START_POS NUMERIC(5) NULL,
  END_POS NUMERIC(5) NULL,
  POS NUMERIC(5) NULL,
  PRIMARY KEY(PROGRESSIVE_SYS23, FIELD_NAME, LANGUAGE_CODE),
  INDEX SYS24_FKIndex1(PROGRESSIVE_SYS23),
  FOREIGN KEY(PROGRESSIVE_SYS23)
    REFERENCES SYS23_ETL_PROCESSES(PROGRESSIVE)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);



INSERT INTO SYS11_APPLICATION_PARS(PARAM_CODE,VALUE) VALUES('INCREMENT_VALUE','10');
INSERT INTO SYS21_COMPANY_PARAMS(COMPANY_CODE_SYS01,PARAM_CODE,VALUE) 
SELECT COMPANY_CODE,'INITIAL_VALUE','3' FROM SYS01_COMPANIES WHERE ENABLED='Y';

INSERT INTO SYS06_FUNCTIONS(FUNCTION_CODE,PROGRESSIVE_SYS10,IMAGE_NAME,METHOD_NAME,USE_COMPANY_CODE,CAN_DEL)
VALUES('IMPORT_DATA',3562,'in.gif','importData','Y','N');
INSERT INTO SYS18_FUNCTION_LINKS(POS_ORDER,FUNCTION_CODE_SYS06,PROGRESSIVE_HIE01) VALUES(9,'IMPORT_DATA',102);

INSERT INTO SYS07_ROLE_FUNCTIONS(PROGRESSIVE_SYS04,FUNCTION_CODE_SYS06,CAN_INS,CAN_UPD,CAN_DEL)
 SELECT 2,FUNCTION_CODE,'Y','Y','Y' FROM SYS06_FUNCTIONS
 WHERE NOT EXISTS(SELECT * FROM SYS07_ROLE_FUNCTIONS WHERE SYS07_ROLE_FUNCTIONS.FUNCTION_CODE_SYS06=SYS06_FUNCTIONS.FUNCTION_CODE);

INSERT INTO SYS02_COMPANIES_ACCESS(COMPANY_CODE_SYS01,PROGRESSIVE_SYS04,FUNCTION_CODE_SYS06,CAN_INS,CAN_UPD,CAN_DEL)
 SELECT COMPANY_CODE,2,FUNCTION_CODE_SYS06,'Y','Y','Y' FROM SYS07_ROLE_FUNCTIONS,SYS06_FUNCTIONS,SYS01_COMPANIES
 WHERE FUNCTION_CODE_SYS06=FUNCTION_CODE AND USE_COMPANY_CODE='Y' AND SYS01_COMPANIES.ENABLED='Y' AND
 NOT EXISTS(SELECT * FROM SYS02_COMPANIES_ACCESS WHERE COMPANY_CODE_SYS01=COMPANY_CODE AND FUNCTION_CODE_SYS06=FUNCTION_CODE);


 CREATE TABLE SYS25_FUNCTIONS_DIGESTS (
  FUNCTION_CODE_SYS06 VARCHAR(20) NOT NULL,
  DIGEST VARCHAR(2000) NULL,
  PRIMARY KEY(FUNCTION_CODE_SYS06),
  FOREIGN KEY(FUNCTION_CODE_SYS06)
    REFERENCES SYS06_FUNCTIONS(FUNCTION_CODE)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE TABLE SYS26_GRID_PERMISSIONS_DEFS (
  FUNCTION_CODE_SYS06 VARCHAR(20) NOT NULL,
  COLS_POS VARCHAR(2000) NULL,
  EDIT_COLS_IN_INS VARCHAR(2000) NULL,
  EDIT_COLS_IN_EDIT VARCHAR(2000) NULL,
  REQUIRED_COLS VARCHAR(2000) NULL,
  COLS_VIS VARCHAR(2000) NULL,
  COLS_NAME VARCHAR(2000) NULL,
  PRIMARY KEY(FUNCTION_CODE_SYS06),
  FOREIGN KEY(FUNCTION_CODE_SYS06)
    REFERENCES SYS06_FUNCTIONS(FUNCTION_CODE)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

CREATE TABLE SYS27_GRID_PERMISSIONS (
  FUNCTION_CODE_SYS06 VARCHAR(20) NOT NULL,
  PROGRESSIVE_SYS04 NUMERIC(12) NOT NULL,
  COLS_POS VARCHAR(2000) NULL,
  EDIT_COLS_IN_INS VARCHAR(2000) NULL,
  EDIT_COLS_IN_EDIT VARCHAR(2000) NULL,
  REQUIRED_COLS VARCHAR(2000) NULL,
  COLS_VIS VARCHAR(2000) NULL,
  PRIMARY KEY(FUNCTION_CODE_SYS06, PROGRESSIVE_SYS04),
  INDEX SYS27_FKIndex1(FUNCTION_CODE_SYS06),
  INDEX SYS27_FKIndex2(PROGRESSIVE_SYS04),
  FOREIGN KEY(FUNCTION_CODE_SYS06)
    REFERENCES SYS06_FUNCTIONS(FUNCTION_CODE)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(PROGRESSIVE_SYS04)
    REFERENCES SYS04_ROLES(PROGRESSIVE)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION
);

